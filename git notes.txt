http://gitimmersion.com/

in order to track changes in chapter.txt i must add it to staging area
that is an intermediate place where you can pick and choose which files inside your working
directory that you want to commit.

git init
Initialized empty Git repository in I:/nodejs/Story/.git/
----
git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        chapter 1.txt
        git notes.txt

nothing added to commit but untracked files present (use "git add" to track)
----
git add chapter 1.txt              (it adds it to the stagging area)
fatal: pathspec 'chapter' did not match any files

git add chapter\ 1.txt
----
Note a user and email in setting first
git commit -m "initial commit"

to commit changes ,-m add a commit comment.

must add then commit each time
----
git log
commit 7228325e395b2fba8fe85399aa0671080fc9c545 (HEAD -> master)
Author: Draculafangs <soulofnaruto@gmail.com>
Date:   Wed Jul 3 06:31:39 2019 +0200

    comp

commit 8630b3da876ff9f0e03c45271a1bb677bc26124b
Author: Draculafangs <soulofnaruto@gmail.com>
Date:   Wed Jul 3 06:27:10 2019 +0200

    initial commit

git add .  adds everything in the current directory.
-----------
git status if there are changes to be staged and committed then you can look at diff
between them and their last version.
git diff 		shows differences in all files
git diff filename 	shows differences in this file

git checkout filename returns files to their previous state(version)

----------
�or create a new repository on the command line
echo "# Story" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/Draculafangs/Story.git
git push -u origin master
---
�or push an existing repository from the command line
git remote add origin https://github.com/Draculafangs/Story.git
git push -u origin master

master is the name of branch, master is default branch or main branch of all the commits
origin is the name of your remote (people call it that by convention),it can be named
anything else.


https://github.com/StylishThemes/GitHub-Dark

---
�or import code from another repository
You can initialize this repository with code from a Subversion, Mercurial, or TFS project.

how does the remote and repoistory
---
gitignore to avoid uploading sensitive piece of information like api keys or passwords to
remote repository (ex:aws key)

touch .gitignore
now open files and but the ignored file names each on a new line

git rm --cached -r .

-r recursive

A collection of useful .gitignore templates
https://github.com/github/gitignore

git clone (url)

https://stackoverflow.com/questions/9483757/how-to-exit-git-log-or-git-diff

https://stackoverflow.com/questions/3651860/which-characters-are-illegal-within-a-branch-name
git branch branchname => creates new branch

git branch => it lists the branches
ex:
  DifferentRoute
* master

* shows which branch we are currently on

whenever the branch changes the files in working directory

note : i had another folder which is a repoistory CrunchySubs in the current working folder
so when i created a new branch it became the new branch ???

git checkout DifferentRoute
Switched to branch 'DifferentRoute'

git log

commit 82050534e93bed85bee68c130e28b79e0279f75b (origin/master, master) <= this is github commit.


git reset --hard HEAD^   =>delete last commit

to merge the current branch(master) with the another branch("DifferentRoute")
while in master branch:
git merge DifferentRoute
